// POD'S Mobile - Chat
‎
‎import React, { useState, useEffect } from "react";
‎import { View, TextInput, Button, FlatList, Text } from "react-native";
‎import auth from "@react-native-firebase/auth";
‎import firestore from "@react-native-firebase/firestore";
‎import functions from "@react-native-firebase/functions";
‎
‎export default function ChatApp() {
‎const [message, setMessage] = useState("");
‎const [messages, setMessages] = useState([]);
‎const [accessCode, setAccessCode] = useState("");
‎const [isAuthenticated, setIsAuthenticated] = useState(false);
‎
‎useEffect(() => {
‎const unsubscribe = firestore()
‎.collection("messages")
‎.orderBy("timestamp", "desc")
‎.onSnapshot(snapshot => {
‎setMessages(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));
‎});
‎return unsubscribe;
‎}, []);
‎
‎const handleSend = async () => {
‎if (!message) return;
‎await firestore().collection("messages").add({
‎text: message,
‎timestamp: firestore.FieldValue.serverTimestamp(),
‎uid: auth().currentUser.uid,
‎});
‎setMessage("");
‎};
‎
‎const handleAccessCodeLogin = async () => {
‎const result = await functions().httpsCallable("verifyAccessCode")({ code: accessCode });
‎if (result.data.success) {
‎const userCred = await auth().signInAnonymously();
‎setIsAuthenticated(true);
‎} else {
‎alert("Invalid access code.");
‎}
‎};
‎
‎if (!isAuthenticated) {
‎return (
‎
‎Enter Access Code:
‎placeholder="Access Code"
‎value={accessCode}
‎onChangeText={setAccessCode}
‎className="border p-2 mb-2"
‎/>
‎
‎
‎);
‎}
‎
‎return (
‎
‎data={messages}
‎inverted
‎keyExtractor={item => item.id}
‎renderItem={({ item }) => {item.text}}
‎/>
‎value={message}
‎onChangeText={setMessage}
‎placeholder="Type a message..."
‎className="border p-2 my-2"
‎/>
‎
‎
‎);
‎} // functions/index.js
‎const functions = require("firebase-functions");
‎const admin = require("firebase-admin");
‎admin.initializeApp();
‎
‎exports.verifyAccessCode = functions.https.onCall(async (data, context) => {
‎const code = data.code;
‎const doc = await admin.firestore().collection("accessCodes").doc(code).get();
‎if (doc.exists) {
‎return { success: true };
‎} else {
‎return { success: false };
‎}
‎});
‎
‎